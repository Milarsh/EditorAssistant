services:
  app:
    build:
      context: .
      dockerfile: infra/Dockerfile
    env_file:
      - .env
    command: ["python", "-m", "assistant"]
    volumes:
      - ./src:/app/src:ro
      - ./log:/app/log
      - ./media:/app/media
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:16
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - dbdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB" ]
      interval: 5s
      timeout: 3s
      retries: 10

  parser:
    build:
      context: .
      dockerfile: infra/Dockerfile
    env_file:
      - .env
    command: ["python", "-m", "assistant.parser"]
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./src:/app/src:ro
      - ./log:/app/log
      - ./media:/app/media

volumes:
  dbdata: